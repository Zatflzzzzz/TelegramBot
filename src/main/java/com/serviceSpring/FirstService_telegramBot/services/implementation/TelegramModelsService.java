package com.serviceSpring.FirstService_telegramBot.services.implementation;

import com.serviceSpring.FirstService_telegramBot.models.GeneralProduct;
import lombok.Data;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.commands.BotCommand;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Service
@Data
public class TelegramModelsService {
    private final OutputDataService outputDataService;
    private final JsonParserService jsonParserService;
    private final DataReceiverService dataReceiverService;

    List<BotCommand> createCommands(){
        List<BotCommand> listOfCommands = new ArrayList<>();
        listOfCommands.add(new BotCommand("/start", "–ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º"));
        listOfCommands.add(new BotCommand("/show_catalog", "–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥"));
        listOfCommands.add(new BotCommand("/help", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö"));

        return listOfCommands;
    }

    public SendMessage sendButtons_catalog(long chatId) throws IOException {
        SendMessage message = new SendMessage();
        List<String> listOfCatalogsNames = outputDataService.getCatalogs();

        message.setChatId(chatId);
        message.setText("–ò–∑—É—á–∏—Ç–µ –Ω–∞—à –≤—ã–±–æ—Ä –∫–∞—Ç–∞–ª–æ–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –∏ —É—Å–ª—É–≥–∞–º–∏ —Å onliner." +
                "–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∫–∞—Ç–∞–ª–æ–≥ –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫!");

        var inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        for (String catalogName : listOfCatalogsNames) {
            keyboard.add(List.of(createButton("üìÅ " + catalogName, "catalog_" + catalogName)));
        }

        inlineKeyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(inlineKeyboardMarkup);

        return message;
    }

    public SendMessage sendButtons_category(long chatId, String nameOfCatalog) throws IOException {
        SendMessage message = new SendMessage();
        List<String> listOfCategoryNames = outputDataService.getCategoriesOfCatalog(nameOfCatalog);

        message.setChatId(chatId);
        message.setText("üìÇ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥: `" + nameOfCatalog + "`\n\n" +
                "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.");

        var inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        for (String categoryName : listOfCategoryNames) {
            keyboard.add(List.of(createButton("üìë " + categoryName, "cat_" + nameOfCatalog + "_" + categoryName)));
        }

        inlineKeyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(inlineKeyboardMarkup);

        return message;
    }

    public SendMessage sendButtons_allAvailablePages(long chatId, String nameOfCatalog, String nameOfCategory, String nameOfSubCategory) throws IOException {
        SendMessage message = new SendMessage();

        message.setChatId(chatId);
        message.setText("""
                –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Å –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–∞–º –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏. 
                
                –°—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–∞–º –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –ø–µ—Ä–≤—ã–µ –ø—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å onliner!""");

        var inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        for(int i = 1; i <= DataReceiverService.COUNT_OF_PAGES; i++){
            keyboard.add(List.of(createButton("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–æ–º–µ—Ä " + i, "p" +"_" + i + "_" + nameOfCatalog + "_" + nameOfCategory + "_" + nameOfSubCategory)));
        }

        inlineKeyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(inlineKeyboardMarkup);

        return message;
    }

    private InlineKeyboardButton createButton(String name, String data) {
        var inline = new InlineKeyboardButton();
        inline.setText(name);
        inline.setCallbackData(data);

        return inline;
    }

    public List<SendPhoto> sendProductPhotoMessagesOfFiveProducts(long chatId, String nameOfCatalog, String nameOfCategory, String nameOfSubCategory) throws IOException {
        List<GeneralProduct> listOfProducts = outputDataService.getFiveSubCategoryProducts(nameOfCatalog, nameOfCategory, nameOfSubCategory);

        return getProductPhotoMessages(chatId, listOfProducts);
    }

    public List<SendPhoto> sendProductPhotoMessagesFromCurrentPage(long chatId, String nameOfCatalog, String nameOfCategory, String nameOfSubCategory, int page) throws IOException {
        List<GeneralProduct> listOfProducts = outputDataService.getSixSubCategoryProductsFromCurrentPage(nameOfCatalog, nameOfCategory, nameOfSubCategory, page);

        return getProductPhotoMessages(chatId, listOfProducts);
    }

    public List<SendPhoto> sendSevenPrimeSubCategoryElements(long chatId, String nameOfCatalog, String nameOfCategory, String nameOfSubCategory) throws IOException {
        List<GeneralProduct> listOfPrimeProducts = outputDataService.getTenPrimeSubCategoryElements(nameOfCatalog,nameOfCategory, nameOfSubCategory);

        return getProductPhotoMessages(chatId, listOfPrimeProducts);
    }

    private List<SendPhoto> getProductPhotoMessages(long chatId,List<GeneralProduct> listOfProducts){
        List<SendPhoto> productPhotoMessages = new ArrayList<>();

        for (GeneralProduct product : listOfProducts) {
            SendPhoto productPhotoMessage = getInformationOfProduct(chatId, product);

            productPhotoMessages.add(productPhotoMessage);
        }

        return productPhotoMessages;
    }

    public SendPhoto getInformationOfProduct(long chatId, GeneralProduct product) {
        SendPhoto sendPhoto = new SendPhoto();
        sendPhoto.setChatId(chatId);

        InputFile photo = new InputFile(product.getImageUrl());
        sendPhoto.setPhoto(photo);

        String caption = String.format(
                "–ù–∞–∑–≤–∞–Ω–∏–µ: %s\n–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: %s\n–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: %s\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: %s\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: %s\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤: %d\n–†–µ–π—Ç–∏–Ω–≥: %.1f/10\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: %s",
                product.getName(),
                product.getManufacturer(),
                product.getFullDescription(),
                product.getMinPrice(),
                product.getMaxPrice(),
                product.getReviewsCount(),
                (double) product.getReviewRating() * 2 / 10,
                product.getProductUrl()
        );

        sendPhoto.setCaption(caption);

        return sendPhoto;
    }

    public SendMessage sendText_InformationOfSubCategory(long chatId, String nameOfCatalog, String nameOfCategory, String nameOfSubCategory) throws IOException {
        SendMessage message = new SendMessage();

        message.setChatId(chatId);
        message.setText("–í—ã –≤—ã–±—Ä–∞–ª–∏:\nüìÅ –ö–∞—Ç–∞–ª–æ–≥: `" + nameOfCatalog + "`\n" +
                "üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è: `" + nameOfCategory + "`\n" +
                "üîπ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: `" + nameOfSubCategory + "`\n\n" +
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏ —Å–º–µ–ª–æ –∑–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä –Ω–∞ –æ–Ω–ª–∞–π–Ω–µ—Ä–µ!.");

        return message;
    }

    public SendMessage sendButtons_subCategory(long chatId, String nameOfCatalog, String nameOfCategory) throws IOException {
        SendMessage message = new SendMessage();
        List<String> listOfSubCategoryNames = outputDataService.getSubDirectoriesOfCategory(nameOfCatalog, nameOfCategory);

        message.setChatId(chatId);
        message.setText("–í—ã –≤—ã–±—Ä–∞–ª–∏:\nüìÅ –ö–∞—Ç–∞–ª–æ–≥: `" + nameOfCatalog + "`\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è: `" + nameOfCategory + "`\n\n" +
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞.");

        var inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        for (String subCategoryName : listOfSubCategoryNames) {
            keyboard.add(List.of(createButton("üìÇ " + subCategoryName, "_" + nameOfCatalog + "_" + nameOfCategory + "_" + subCategoryName)));
        }

        inlineKeyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(inlineKeyboardMarkup);

        return message;
    }

    public SendMessage sendText_additionalInformationAndFunctions(long chatId, String nameOfCatalog, String nameOfCategory, String nameOfSubCategory) throws IOException {
        SendMessage message = new SendMessage();

        message.setChatId(chatId);
        message.setText("–í—ã –≤—ã–±—Ä–∞–ª–∏: \nüìÅ –ö–∞—Ç–∞–ª–æ–≥: `" + nameOfCatalog + "`\n" +
                "üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è: `" + nameOfCategory + "`\n" +
                "üîπ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: `" + nameOfSubCategory + "`\n\n" +
                "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å:");

        var inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        keyboard.add(List.of(createButton("–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏!", "r" + "_" + nameOfCatalog + "_" + nameOfCategory + "_" + nameOfSubCategory)));
        keyboard.add(List.of(createButton("–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å 10 –ª—É—á—à–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏!", "t" + "_" + nameOfCatalog + "_" + nameOfCategory + "_" + nameOfSubCategory)));
        keyboard.add(List.of(createButton("–í—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞", "getp" + "_" + nameOfCatalog + "_" + nameOfCategory + "_" + nameOfSubCategory)));
        keyboard.add(List.of(createButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!", "showAgainCatalog")));

        inlineKeyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(inlineKeyboardMarkup);

        return message;
    }
}